NAME CONVENTIONS FOR CODE
	
	-- Assets --
		All asset names should be written in snake_case.
		This includes: objects, rooms, sprites, sequences, sounds, etc.
		Exception: Global scripts that store many associated functions.
		
		- USE PREFIXES WHEN NAMING ASSETS!
		objects		-----	obj_
		sprites		-----	spr_
		rooms		-----	rm_
		scripts		-----	scr_
		sequences	-----	seq_
		sfx			-----	snd_ (must be .wav)
		music		-----	mus_ (must be .ogg)
		shaders		-----	shd_
		fonts		-----	fnt_
	
	-- Variables --
		All variables should be written in camelCase.
		Additionally, function arguments must be written with a "_" prefix.
		
	-- Constants (macros) --
		All macros must be written in UPPER_CASE_WITH_UNDERSCORES.
		
	-- Functions --
		Custom functions should be written in PascalCase.
			Example: MyFunction()
		This will help us differentiate our custom functions from 
		GameMaker native functions or JujuAdams' libraries functions.
		
	-- Enumerators --
		Enums must be written with a "e_" prefix.
		
	-- Arrays --
		Arrays must be written in camelCase and contain the word "list" in their names. 
		Example: global.dialogueList

NAME CONVENTIONS FOR YARN FILES

	It's important to name yarn files consistently to ensure easy navigation and understanding.
	And also to avoid unexpected bugs when using Chatterbox's localization system.

	Every YARN file should follow this same structure:
		
		[Prefix] + [_] + [SceneID] + [_] + [Descriptor] + [_] + [*Modifier] + [.yarn]

	We're using snake_case for the file naming. Meaning: all characters must be lowercase.
	
	-- Prefix --
		Either one of these:
		- [main]
			Files prefixed with main indicate they belong to the main storyline.
			The subsequent "sceneX" helps organize the sequence of events in the main plot.
		
		- [chara] 
			Files prefixed with a character's name denote content specific to that character's route.
			Character routes only happen after the main storyline is completed.
			Use meaningful names for character prefixes to enhance readability. 
			It should be as simple as: ype, caru, hydra, rose, etc.
			
	-- Scene ID --
		There are two ways of identifying each scene:
			- [sceneX] 
				Identifies the specific scene within the main storyline or character route.
			- [sceneX-X] 
				This version is used from branching scenes. 
				When an earlier scene branches itself in two or three new scenes, you can enumerate them.
		
		Examples: 
			main_scene1_initial.yarn
			chara_scene2_unicorridor.yarn
			main_scene5-1_ecopark.yarn
			main_scene5-2_dormroom_afternoon.yarn

	-- Descriptors --
		Describes the scene using a keyword of relevance. 
		
		Needed to provide clarity or distinguish specific settings within the narrative. 
		The inclusion of modifiers further refines the identification of scenes.
		Use a meaningful short word. Could be the name of a place, moment or something else.
		Example: main_scene1_initial.yarn, main_scene4_mcthoughts, main_scene5-1_ecopark
		
	-- Modifier --
		Optional modifiers for scenes that may require additional information for clarity.

		Example:  
			Indicates the scene occurs subsequent to a specific event in the "unicorridor" setting.
			main_scene3_unicorridor_after.yarn
